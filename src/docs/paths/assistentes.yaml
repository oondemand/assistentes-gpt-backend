/assistentes/:
  post:
    tags:
      - Assistentes
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - modulo
              - assistente
            properties:
              modulo:
                type: string
                example: "Financeiro"
              assistente:
                type: string
                example: "Assistente Financeiro"
              status:
                type: string
                enum: ["ativo", "inativo"]
                default: "ativo"
                example: "ativo"
    responses:
      201:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Assistente"
  get:
    tags:
      - Assistentes
    description: |
      Retorna uma lista paginada de assistentes. Permite filtrar por qualquer campo do modelo de assistente.
      Exemplos de filtros:
      - modulo=Financeiro
      - status=ativo
    parameters:
      - $ref: "#/components/parameters/PageIndexParam"
      - $ref: "#/components/parameters/PageSizeParam"
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/BasePaginatedResponse"
                - type: object
                  properties:
                    results:
                      items:
                        $ref: "#/components/schemas/Assistente"

/assistentes/ativos:
  get:
    tags:
      - Assistentes
    description: Retorna uma lista de todos os assistentes ativos
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                assistentes:
                  type: array
                  items:
                    $ref: "#/components/schemas/Assistente"

/assistentes/{id}:
  get:
    tags:
      - Assistentes
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID do assistente
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                assistente:
                  $ref: "#/components/schemas/Assistente"
  put:
    tags:
      - Assistentes
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID do assistente
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Assistente"
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                assistente:
                  $ref: "#/components/schemas/Assistente"
  delete:
    tags:
      - Assistentes
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID do assistente
    responses:
      200:
        content:
          application/json:
            schema:
              type: object
              properties:
                assistente:
                  $ref: "#/components/schemas/Assistente"
