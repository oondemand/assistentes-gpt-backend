/pessoas/:
  post:
    tags:
      - Pessoas
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - nome
            properties:
              grupo:
                type: string
                example: "Grupo A"
              tipo:
                type: string
                example: "pf"
              nome:
                type: string
                example: "João da Silva"
              documento:
                type: string
                example: "123.456.789-00"
              status:
                type: string
                example: "ativo"
    responses:
      201:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/Pessoa"
  get:
    tags:
      - Pessoas
    description: |
      Retorna uma lista paginada de pessoas. Permite filtrar por qualquer campo do modelo de pessoa.
      Exemplos de filtros:
      - tipo=pf
      - nome=João
      - status=ativo
    parameters:
      - $ref: "#/components/parameters/PageIndexParam"
      - $ref: "#/components/parameters/PageSizeParam"
    responses:
      200:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/BasePaginatedResponse"
                - type: object
                  properties:
                    results:
                      items:
                        $ref: "#/components/schemas/Pessoa"

/pessoas/exportar:
  get:
    tags:
      - Pessoas
    parameters:
      - $ref: "#/components/parameters/PageIndexParam"
      - $ref: "#/components/parameters/PageSizeParam"
    responses:
      200:
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary

/pessoas/importar:
  post:
    tags:
      - Pessoas
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Importacao"

/pessoas/{id}:
  get:
    tags:
      - Pessoas
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID da pessoa
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pessoa"
  patch:
    tags:
      - Pessoas
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID da pessoa
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pessoa"
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pessoa"
  delete:
    tags:
      - Pessoas
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
        description: ID da pessoa
    responses:
      200:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pessoa"
